// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders with styles 1`] = `
.emotion-0 {
  display: grid;
  padding: 8px;
  gap: 8px;
  width: 256px;
  border-radius: 4px;
  background-color: white;
  box-shadow: 0 2px 8px 1px rgba(0,0,0,.125);
}

.emotion-1 {
  position: relative;
  width: 100%;
  height: 0;
  padding-bottom: 75%;
}

.emotion-2 {
  width: 16px;
  height: 16px;
  border-radius: 9999px;
  border: 1px solid white;
  -webkit-transform: translate(-8px,-8px);
  -ms-transform: translate(-8px,-8px);
  transform: translate(-8px,-8px);
}

.emotion-3 {
  position: relative;
  width: 100%;
  height: 8px;
}

.emotion-4 {
  width: 12px;
  height: 12px;
  border-radius: 9999px;
  background-color: white;
  box-shadow: 0 0 2px rgba(0,0,0,.25);
  -webkit-transform: translate(-6px,-2px);
  -ms-transform: translate(-6px,-2px);
  transform: translate(-6px,-2px);
}

.emotion-5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-6 {
  display: block;
  width: 100%;
  font-size: 10px;
}

.emotion-6 input:focus {
  color: primary;
  background-color: highlight;
}

<div
  className="emotion-0"
>
  <div
    className="emotion-1"
  >
    <div
      onMouseDown={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      style={
        Object {
          "MozBorderRadius": undefined,
          "OBorderRadius": undefined,
          "WebkitBorderRadius": undefined,
          "background": "hsl(0,100%, 50%)",
          "borderRadius": undefined,
          "bottom": "0px",
          "left": "0px",
          "msBorderRadius": undefined,
          "position": "absolute",
          "right": "0px",
          "top": "0px",
        }
      }
    >
      <style>
        
          .saturation-white {
            background: -webkit-linear-gradient(to right, #fff, rgba(255,255,255,0));
            background: linear-gradient(to right, #fff, rgba(255,255,255,0));
          }
          .saturation-black {
            background: -webkit-linear-gradient(to top, #000, rgba(0,0,0,0));
            background: linear-gradient(to top, #000, rgba(0,0,0,0));
          }
        
      </style>
      <div
        className="saturation-white"
        style={
          Object {
            "MozBorderRadius": undefined,
            "OBorderRadius": undefined,
            "WebkitBorderRadius": undefined,
            "borderRadius": undefined,
            "bottom": "0px",
            "left": "0px",
            "msBorderRadius": undefined,
            "position": "absolute",
            "right": "0px",
            "top": "0px",
          }
        }
      >
        <div
          className="saturation-black"
          style={
            Object {
              "MozBorderRadius": undefined,
              "MozBoxShadow": undefined,
              "OBorderRadius": undefined,
              "OBoxShadow": undefined,
              "WebkitBorderRadius": undefined,
              "WebkitBoxShadow": undefined,
              "borderRadius": undefined,
              "bottom": "0px",
              "boxShadow": undefined,
              "left": "0px",
              "msBorderRadius": undefined,
              "msBoxShadow": undefined,
              "position": "absolute",
              "right": "0px",
              "top": "0px",
            }
          }
        />
        <div
          style={
            Object {
              "cursor": "default",
              "left": "100%",
              "position": "absolute",
              "top": "0%",
            }
          }
        >
          <div
            className="emotion-2"
          />
        </div>
      </div>
    </div>
  </div>
  <div
    className="emotion-3"
  >
    <div
      style={
        Object {
          "MozBorderRadius": undefined,
          "MozBoxShadow": undefined,
          "OBorderRadius": undefined,
          "OBoxShadow": undefined,
          "WebkitBorderRadius": undefined,
          "WebkitBoxShadow": undefined,
          "borderRadius": undefined,
          "bottom": "0px",
          "boxShadow": undefined,
          "left": "0px",
          "msBorderRadius": undefined,
          "msBoxShadow": undefined,
          "position": "absolute",
          "right": "0px",
          "top": "0px",
        }
      }
    >
      <div
        className="hue-horizontal"
        onMouseDown={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "MozBorderRadius": undefined,
            "OBorderRadius": undefined,
            "WebkitBorderRadius": undefined,
            "borderRadius": undefined,
            "height": "100%",
            "msBorderRadius": undefined,
            "padding": "0 2px",
            "position": "relative",
          }
        }
      >
        <style>
          
            .hue-horizontal {
              background: linear-gradient(to right, #f00 0%, #ff0 17%, #0f0
                33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);
              background: -webkit-linear-gradient(to right, #f00 0%, #ff0
                17%, #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);
            }

            .hue-vertical {
              background: linear-gradient(to top, #f00 0%, #ff0 17%, #0f0 33%,
                #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);
              background: -webkit-linear-gradient(to top, #f00 0%, #ff0 17%,
                #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);
            }
          
        </style>
        <div
          style={
            Object {
              "left": "0%",
              "position": "absolute",
            }
          }
        >
          <div
            className="emotion-4"
          />
        </div>
      </div>
    </div>
  </div>
  <div
    className="emotion-5"
  >
    <label
      className="emotion-6"
    >
      Hex
      <div
        style={
          Object {
            "position": "relative",
          }
        }
      >
        <input
          id="rc-editable-input-1"
          onBlur={[Function]}
          onChange={[Function]}
          onKeyDown={[Function]}
          placeholder="hex"
          spellCheck="false"
          style={
            Object {
              "border": 0,
              "fontFamily": "Menlo, monospace",
              "fontSize": 12,
              "margin": 0,
              "outline": "none",
              "padding": 0,
              "width": "100%",
            }
          }
          value="#FF0000"
        />
        <label
          htmlFor="rc-editable-input-1"
          onMouseDown={[Function]}
          style={
            Object {
              "display": "none",
            }
          }
        >
          hex
        </label>
      </div>
    </label>
    <label
      className="emotion-6"
    >
      Hue
      <div
        style={
          Object {
            "position": "relative",
          }
        }
      >
        <input
          id="rc-editable-input-2"
          onBlur={[Function]}
          onChange={[Function]}
          onKeyDown={[Function]}
          placeholder="hue"
          spellCheck="false"
          style={
            Object {
              "border": 0,
              "fontFamily": "Menlo, monospace",
              "fontSize": 12,
              "margin": 0,
              "outline": "none",
              "padding": 0,
              "width": "100%",
            }
          }
          value="0"
        />
        <label
          htmlFor="rc-editable-input-2"
          onMouseDown={[Function]}
          style={
            Object {
              "display": "none",
            }
          }
        >
          h
        </label>
      </div>
    </label>
    <label
      className="emotion-6"
    >
      Saturation
      <div
        style={
          Object {
            "position": "relative",
          }
        }
      >
        <input
          id="rc-editable-input-3"
          onBlur={[Function]}
          onChange={[Function]}
          onKeyDown={[Function]}
          placeholder="saturation"
          spellCheck="false"
          style={
            Object {
              "border": 0,
              "fontFamily": "Menlo, monospace",
              "fontSize": 12,
              "margin": 0,
              "outline": "none",
              "padding": 0,
              "width": "100%",
            }
          }
          value="100"
        />
        <label
          htmlFor="rc-editable-input-3"
          onMouseDown={[Function]}
          style={
            Object {
              "display": "none",
            }
          }
        >
          s
        </label>
      </div>
    </label>
    <label
      className="emotion-6"
    >
      Lightness
      <div
        style={
          Object {
            "position": "relative",
          }
        }
      >
        <input
          id="rc-editable-input-4"
          onBlur={[Function]}
          onChange={[Function]}
          onKeyDown={[Function]}
          placeholder="lightness"
          spellCheck="false"
          style={
            Object {
              "border": 0,
              "fontFamily": "Menlo, monospace",
              "fontSize": 12,
              "margin": 0,
              "outline": "none",
              "padding": 0,
              "width": "100%",
            }
          }
          value="50"
        />
        <label
          htmlFor="rc-editable-input-4"
          onMouseDown={[Function]}
          style={
            Object {
              "display": "none",
            }
          }
        >
          l
        </label>
      </div>
    </label>
  </div>
</div>
`;

exports[`snapshot renders as a popover 1`] = `
Array [
  <div
    aria-controls="id-1"
    aria-expanded={false}
    aria-haspopup="dialog"
    onClick={[Function]}
    onClickCapture={[Function]}
    onKeyDown={[Function]}
    onKeyPressCapture={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseDownCapture={[Function]}
    type="button"
  >
    <button>
      Edit color
    </button>
  </div>,
  .emotion-0 {
  outline: none;
}

.emotion-1 {
  display: grid;
  padding: 8px;
  gap: 8px;
  width: 256px;
  border-radius: 4px;
  background-color: white;
  box-shadow: 0 2px 8px 1px rgba(0,0,0,.125);
}

.emotion-2 {
  position: relative;
  width: 100%;
  height: 0;
  padding-bottom: 75%;
}

.emotion-3 {
  width: 16px;
  height: 16px;
  border-radius: 9999px;
  border: 1px solid white;
  -webkit-transform: translate(-8px,-8px);
  -ms-transform: translate(-8px,-8px);
  transform: translate(-8px,-8px);
}

.emotion-4 {
  position: relative;
  width: 100%;
  height: 8px;
}

.emotion-5 {
  width: 12px;
  height: 12px;
  border-radius: 9999px;
  background-color: white;
  box-shadow: 0 0 2px rgba(0,0,0,.25);
  -webkit-transform: translate(-6px,-2px);
  -ms-transform: translate(-6px,-2px);
  transform: translate(-6px,-2px);
}

.emotion-6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-7 {
  display: block;
  width: 100%;
  font-size: 10px;
}

.emotion-7 input:focus {
  color: primary;
  background-color: highlight;
}

<div
    aria-label="Edit color"
    className="emotion-0"
    data-dialog={true}
    hidden={true}
    id="id-1"
    onAnimationEnd={[Function]}
    onBlur={[Function]}
    onKeyDown={[Function]}
    onTransitionEnd={[Function]}
    role="dialog"
    style={
      Object {
        "display": "none",
      }
    }
    tabIndex={-1}
  >
    <div
      className="emotion-1"
    >
      <div
        className="emotion-2"
      >
        <div
          onMouseDown={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            Object {
              "MozBorderRadius": undefined,
              "OBorderRadius": undefined,
              "WebkitBorderRadius": undefined,
              "background": "hsl(0,100%, 50%)",
              "borderRadius": undefined,
              "bottom": "0px",
              "left": "0px",
              "msBorderRadius": undefined,
              "position": "absolute",
              "right": "0px",
              "top": "0px",
            }
          }
        >
          <style>
            
          .saturation-white {
            background: -webkit-linear-gradient(to right, #fff, rgba(255,255,255,0));
            background: linear-gradient(to right, #fff, rgba(255,255,255,0));
          }
          .saturation-black {
            background: -webkit-linear-gradient(to top, #000, rgba(0,0,0,0));
            background: linear-gradient(to top, #000, rgba(0,0,0,0));
          }
        
          </style>
          <div
            className="saturation-white"
            style={
              Object {
                "MozBorderRadius": undefined,
                "OBorderRadius": undefined,
                "WebkitBorderRadius": undefined,
                "borderRadius": undefined,
                "bottom": "0px",
                "left": "0px",
                "msBorderRadius": undefined,
                "position": "absolute",
                "right": "0px",
                "top": "0px",
              }
            }
          >
            <div
              className="saturation-black"
              style={
                Object {
                  "MozBorderRadius": undefined,
                  "MozBoxShadow": undefined,
                  "OBorderRadius": undefined,
                  "OBoxShadow": undefined,
                  "WebkitBorderRadius": undefined,
                  "WebkitBoxShadow": undefined,
                  "borderRadius": undefined,
                  "bottom": "0px",
                  "boxShadow": undefined,
                  "left": "0px",
                  "msBorderRadius": undefined,
                  "msBoxShadow": undefined,
                  "position": "absolute",
                  "right": "0px",
                  "top": "0px",
                }
              }
            />
            <div
              style={
                Object {
                  "cursor": "default",
                  "left": "100%",
                  "position": "absolute",
                  "top": "0%",
                }
              }
            >
              <div
                className="emotion-3"
              />
            </div>
          </div>
        </div>
      </div>
      <div
        className="emotion-4"
      >
        <div
          style={
            Object {
              "MozBorderRadius": undefined,
              "MozBoxShadow": undefined,
              "OBorderRadius": undefined,
              "OBoxShadow": undefined,
              "WebkitBorderRadius": undefined,
              "WebkitBoxShadow": undefined,
              "borderRadius": undefined,
              "bottom": "0px",
              "boxShadow": undefined,
              "left": "0px",
              "msBorderRadius": undefined,
              "msBoxShadow": undefined,
              "position": "absolute",
              "right": "0px",
              "top": "0px",
            }
          }
        >
          <div
            className="hue-horizontal"
            onMouseDown={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            style={
              Object {
                "MozBorderRadius": undefined,
                "OBorderRadius": undefined,
                "WebkitBorderRadius": undefined,
                "borderRadius": undefined,
                "height": "100%",
                "msBorderRadius": undefined,
                "padding": "0 2px",
                "position": "relative",
              }
            }
          >
            <style>
              
            .hue-horizontal {
              background: linear-gradient(to right, #f00 0%, #ff0 17%, #0f0
                33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);
              background: -webkit-linear-gradient(to right, #f00 0%, #ff0
                17%, #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);
            }

            .hue-vertical {
              background: linear-gradient(to top, #f00 0%, #ff0 17%, #0f0 33%,
                #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);
              background: -webkit-linear-gradient(to top, #f00 0%, #ff0 17%,
                #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);
            }
          
            </style>
            <div
              style={
                Object {
                  "left": "0%",
                  "position": "absolute",
                }
              }
            >
              <div
                className="emotion-5"
              />
            </div>
          </div>
        </div>
      </div>
      <div
        className="emotion-6"
      >
        <label
          className="emotion-7"
        >
          Hex
          <div
            style={
              Object {
                "position": "relative",
              }
            }
          >
            <input
              id="rc-editable-input-5"
              onBlur={[Function]}
              onChange={[Function]}
              onKeyDown={[Function]}
              placeholder="hex"
              spellCheck="false"
              style={
                Object {
                  "border": 0,
                  "fontFamily": "Menlo, monospace",
                  "fontSize": 12,
                  "margin": 0,
                  "outline": "none",
                  "padding": 0,
                  "width": "100%",
                }
              }
              value="#FF0000"
            />
            <label
              htmlFor="rc-editable-input-5"
              onMouseDown={[Function]}
              style={
                Object {
                  "display": "none",
                }
              }
            >
              hex
            </label>
          </div>
        </label>
        <label
          className="emotion-7"
        >
          Hue
          <div
            style={
              Object {
                "position": "relative",
              }
            }
          >
            <input
              id="rc-editable-input-6"
              onBlur={[Function]}
              onChange={[Function]}
              onKeyDown={[Function]}
              placeholder="hue"
              spellCheck="false"
              style={
                Object {
                  "border": 0,
                  "fontFamily": "Menlo, monospace",
                  "fontSize": 12,
                  "margin": 0,
                  "outline": "none",
                  "padding": 0,
                  "width": "100%",
                }
              }
              value="0"
            />
            <label
              htmlFor="rc-editable-input-6"
              onMouseDown={[Function]}
              style={
                Object {
                  "display": "none",
                }
              }
            >
              h
            </label>
          </div>
        </label>
        <label
          className="emotion-7"
        >
          Saturation
          <div
            style={
              Object {
                "position": "relative",
              }
            }
          >
            <input
              id="rc-editable-input-7"
              onBlur={[Function]}
              onChange={[Function]}
              onKeyDown={[Function]}
              placeholder="saturation"
              spellCheck="false"
              style={
                Object {
                  "border": 0,
                  "fontFamily": "Menlo, monospace",
                  "fontSize": 12,
                  "margin": 0,
                  "outline": "none",
                  "padding": 0,
                  "width": "100%",
                }
              }
              value="100"
            />
            <label
              htmlFor="rc-editable-input-7"
              onMouseDown={[Function]}
              style={
                Object {
                  "display": "none",
                }
              }
            >
              s
            </label>
          </div>
        </label>
        <label
          className="emotion-7"
        >
          Lightness
          <div
            style={
              Object {
                "position": "relative",
              }
            }
          >
            <input
              id="rc-editable-input-8"
              onBlur={[Function]}
              onChange={[Function]}
              onKeyDown={[Function]}
              placeholder="lightness"
              spellCheck="false"
              style={
                Object {
                  "border": 0,
                  "fontFamily": "Menlo, monospace",
                  "fontSize": 12,
                  "margin": 0,
                  "outline": "none",
                  "padding": 0,
                  "width": "100%",
                }
              }
              value="50"
            />
            <label
              htmlFor="rc-editable-input-8"
              onMouseDown={[Function]}
              style={
                Object {
                  "display": "none",
                }
              }
            >
              l
            </label>
          </div>
        </label>
      </div>
    </div>
  </div>,
]
`;
